#FROM centos:7
FROM nvidia/cuda:10.2-devel-centos7


COPY CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo
#RUN yum --disablerepo=cuda 
#
#RUN yum --disablerepo=cuda ...
RUN yum-config-manager --disable cuda
RUN yum-config-manager --disable nvidia-ml

RUN yum clean all && yum makecache

#编译faiss和rockdb

ENV IS_GPU="true"

RUN yum -y update
RUN yum install -y wget gcc gcc-c++ make automake git blas-devel lapack-devel which
RUN mkdir -p /env/app
WORKDIR /env/app/
RUN    wget https://cmake.org/files/v3.12/cmake-3.12.4.tar.gz
RUN    tar -xzf cmake-3.12.4.tar.gz && rm -rf cmake-3.12.4.tar.gz
WORKDIR    /env/app/cmake-3.12.4
RUN    ./bootstrap
RUN    gmake -j8
RUN    gmake install
WORKDIR    /usr/bin
RUN    ln -s cmake3 cmake
WORKDIR     /env/app/

#安装GPU-cuda
#RUN if [ "$IS_GPU" = "true" ] ; then yum install git kernel-devel-uname-r file elfutils-libelf-devel blas-devel lapack-devel -y; fi
#RUN if [ "$IS_GPU" = "true" ] ; then wget http://rpmfind.net/linux/epel/7/ppc64/Packages/d/dkms-2.6.1-1.el7.noarch.rpm && rpm -hiv dkms-2.6.1-1.el7.noarch.rpm; fi
#RUN if [ "$IS_GPU" = "true" ] ; then wget https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda-repo-rhel7-10-2-local-10.2.89-440.33.01-1.0-1.x86_64.rpm && rpm -i cuda-repo-rhel7-10-2-local-10.2.89-440.33.01-1.0-1.x86_64.rpm && yum clean all && yum -y install nvidia-driver-latest-dkms cuda && yum -y install cuda-drivers; fi 
RUN ls .
RUN yum install gcc-gfortran -y
RUN git clone https://github.com/xianyi/OpenBLAS.git
WORKDIR OpenBLAS
RUN make FC=gfortran 
RUN make install 
RUN ln -s /env/app/OpenBLAS/libopenblas.so /usr/lib/libblas.so && ln -s /env/app/OpenBLAS/libopenblas.so.0 /usr/lib/libblas.so.0 && ln -s /env/app/OpenBLAS/libopenblas.a /usr/lib/libblas.so.a
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/env/app/OpenBLAS/

WORKDIR    /env/app
RUN    git clone -b v1.6.3 https://github.com/facebookresearch/faiss.git
WORKDIR    /env/app/faiss

#注意：vearch3.1+，faiss需要1.6.3版本

WORKDIR /env/app/faiss

#编译GPU-faiss
#ENV faiss_gpu_compile="./configure --with-cuda=/usr/local/cuda --with-blas=/env/app/faiss_install/libopenblas.so --prefix=/env/app/faiss_install --with-cuda-arch=\"-gencode=arch=compute_35,code=compute_35 -gencode=arch=compute_52,code=compute_52 -gencode=arch=compute_60,code=compute_60 -gencode=arch=compute_61,code=compute_61 -gencode=arch=compute_70,code=sm_70\""
ENV faiss_gpu_compile="./configure --with-cuda=/usr/local/cuda --prefix=/env/app/faiss_install --with-cuda-arch=\"-gencode=arch=compute_35,code=compute_35 -gencode=arch=compute_52,code=compute_52 -gencode=arch=compute_60,code=compute_60 -gencode=arch=compute_61,code=compute_61 -gencode=arch=compute_70,code=sm_70\""
#编译CPU-faiss
ENV faiss_cpu_compile="./configure --without-cuda --prefix=/env/app/faiss_install"

#faiss:1.6.3bug: error: function "faiss::gpu::isSupportedNoPrecomputedSubDimSize" has already been defined
#删除重复文件解决: /env/app/faiss/gpu/impl/PQScanMultiPassNoPrecomputed.cu和/env/app/faiss/gpu/impl/PQCodeDistances.cu
RUN rm -rf /env/app/faiss/gpu/impl/PQScanMultiPassNoPrecomputed.cu
RUN rm -rf /env/app/faiss/gpu/impl/PQCodeDistances.cu
RUN if [ "$IS_GPU" = "true" ] ; then echo $faiss_gpu_compile|sh;make misc/test_blas && ./misc/test_blas; else $faiss_cpu_compile ; fi
RUN    make -j8
RUN    make install

WORKDIR     /env/app
RUN    wget https://github.com/facebook/rocksdb/archive/v6.2.2.tar.gz -O rocksdb-v6.2.2.tar.gz
RUN    tar -xzf rocksdb-v6.2.2.tar.gz && rm -rf rocksdb-v6.2.2.tar.gz
WORKDIR     /env/app/rocksdb-6.2.2
RUN    make shared_lib -j8
RUN    mkdir -p /env/app/rocksdb_install/lib
RUN    cp librocksdb.so.6.2.2 /env/app/rocksdb_install/lib
WORKDIR /env/app/rocksdb_install/lib
RUN    ln -s /env/app/rocksdb-6.2.2/librocksdb.so.6.2.2 librocksdb.so.6.2
RUN    ln -s /env/app/rocksdb-6.2.2/librocksdb.so.6.2 librocksdb.so
RUN    cp -r /env/app/rocksdb-6.2.2/include /env/app/rocksdb_install/
WORKDIR     /env/app/
RUN    wget https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
RUN    tar -xzf go1.12.7.linux-amd64.tar.gz && rm -rf go1.12.7.linux-amd64.tar.gz
